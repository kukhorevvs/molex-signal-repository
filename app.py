Python 3.13.5 (v3.13.5:6cb20a219a8, Jun 11 2025, 12:23:45) [Clang 16.0.0 (clang-1600.0.26.6)] on darwin
Enter "help" below or click "Help" above for more information.
>>> mport streamlit as st
... import pandas as pd
... import requests
... import plotly.express as px
... import time
... 
... st.set_page_config(page_title="MOEX Signal Advisor", layout="wide")
... st.title("üìà MOEX Signal Advisor")
... 
... tickers = ["SBER", "GAZP", "LKOH", "GMKN", "RTSI", "Si", "BR"]
... selected_tickers = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", tickers, default=tickers)
... signal_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ —Å–∏–≥–Ω–∞–ª—É", ["–í—Å–µ", "BUY", "SELL", "HOLD"])
... 
... def get_price(ticker):
...     url = f"https://iss.moex.com/iss/engines/stock/markets/shares/securities/{ticker}.json"
...     try:
...         data = requests.get(url).json()
...         price = float(data["marketdata"]["data"][0][12])
...         return price
...     except:
...         return None
... 
... def generate_signal(price):
...     if price is None:
...         return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "-", "-", "-", "-"
...     elif price < 100:
...         return "BUY", round(price, 2), round(price * 0.97, 2), round(price * 1.05, 2), "–¶–µ–Ω–∞ –Ω–∏–∂–µ 100 ‚ÇΩ"
...     elif price > 200:
...         return "SELL", round(price, 2), round(price * 1.03, 2), round(price * 0.95, 2), "–¶–µ–Ω–∞ –≤—ã—à–µ 200 ‚ÇΩ"
...     else:
...         return "HOLD", "-", "-", "-", "–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞"
... 
st.subheader("üìä –°–∏–≥–Ω–∞–ª—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç")
table = []
for ticker in selected_tickers:
    price = get_price(ticker)
    signal, entry, stop, take, comment = generate_signal(price)
    if signal_filter == "–í—Å–µ" or signal == signal_filter:
        table.append({
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç": ticker,
            "–°–∏–≥–Ω–∞–ª": signal,
            "–í—Ö–æ–¥": entry,
            "–°—Ç–æ–ø-–ª–æ—Å—Å": stop,
            "–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç": take,
            "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": comment
        })

df = pd.DataFrame(table)
st.dataframe(df, use_container_width=True)

if selected_tickers:
    ticker = selected_tickers[0]
    st.subheader(f"üìâ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –≥—Ä–∞—Ñ–∏–∫: {ticker}")
    url = f"https://iss.moex.com/iss/history/engines/stock/markets/shares/securities/{ticker}.json"
    try:
        data = requests.get(url).json()
        candles = data["history"]["data"]
        columns = data["history"]["columns"]
        df_hist = pd.DataFrame(candles, columns=columns)
        df_hist = df_hist[["TRADEDATE", "CLOSE"]]
        fig = px.line(df_hist, x="TRADEDATE", y="CLOSE", title=f"–¶–µ–Ω–∞ {ticker}")
        st.plotly_chart(fig, use_container_width=True)
    except:
